apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "feathr-online.fullname" . }}
  namespace: {{ .Release.Name }}
  labels:
    {{- include "feathr-online.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "feathr-online.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "feathr-online.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8000
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8000
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: config
            mountPath: /conf
            readOnly: true
          - name: key-vault-secret-store
            mountPath: /mnt/secrets-store
            readOnly: true
          env:
            # Secret of feathr
            - name: FEATHRCI_HOST
              valueFrom:
                secretKeyRef:
                  name: feathr-online-secret
                  key: FEATHRCI_HOST
            - name: FEATHRCI_PASS
              valueFrom:
                secretKeyRef:
                  name: feathr-online-secret
                  key: FEATHRCI_PASS
            - name: FEATHRCI_TABLE
              valueFrom:
                secretKeyRef:
                  name: feathr-online-secret
                  key: FEATHRCI_TABLE
            - name: IPGEOLOCATION_APIKEY
              valueFrom:
                secretKeyRef:
                  name: feathr-online-secret
                  key: IPGEOLOCATION_APIKEY
            - name: CONN_STR
              valueFrom:
                secretKeyRef:
                  name: feathr-online-secret
                  key: CONN_STR
            - name: COSMOS_ACCOUNT
              valueFrom:
                secretKeyRef:
                  name: feathr-online-secret
                  key: COSMOS_ACCOUNT
            - name: COSMOS_API_KEY
              valueFrom:
                secretKeyRef:
                  name: feathr-online-secret
                  key: COSMOS_API_KEY
            - name: COSMOS_DATABASE
              valueFrom:
                secretKeyRef:
                  name: feathr-online-secret
                  key: COSMOS_DATABASE
      volumes:
      # You set volumes at the Pod level, then mount them into containers inside that Pod     
      - name: config
        configMap:
          # Provide the name of the ConfigMap you want to mount.
          name: feathr-online-config
          # An array of keys from the ConfigMap to create as files
          items:
          - key: pipeline.conf
            path: pipeline.conf
          - key: lookup.json
            path: lookup.json
      - name: key-vault-secret-store
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "feathr-aks-secret-store"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}