apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "feathr-online.fullname" . }}
  namespace: default
  labels:
    {{- include "feathr-online.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "feathr-online.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "feathr-online.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8000
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8000
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            # Define the environment variable
            - name: FEATHRCI_HOST    # Notice that the case is different here from the key name in the ConfigMap.
              valueFrom:
                configMapKeyRef:
                  name: feathr-config       # The ConfigMap this value comes from.
                  key: FEATHRCI_HOST        # The key to fetch.
          volumeMounts:
          - name: config
            mountPath: "/config"
            readOnly: true
      volumes:
      # You set volumes at the Pod level, then mount them into containers inside that Pod     
      - name: config
        configMap:
          # Provide the name of the ConfigMap you want to mount.
          name: feathr-config
          # An array of keys from the ConfigMap to create as files
          items:
          - key: "feathr.properties"
            path: "feathr.properties"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
